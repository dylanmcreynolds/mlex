version: "3"

services:
#################### job manager #######################
  mongo:
    image: mongo:4.4
    restart: always
    container_name: "mongodb"
    working_dir: "/database/"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    volumes:
      - "./database/:/data/db"

  job-service:
    image: mlexchange1/computing_api_job-service:1.0
    restart: 'unless-stopped'
    container_name: 'job-service'
    command: 'python api/main.py'
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    depends_on:
      - 'mongo'
    ports:
      - '8080:8080'

  worker-launcher:
    image: mlexchange1/computing_api_worker-launcher:2.0
    restart: 'unless-stopped'
    container_name: 'worker-launcher'
    command: 
      sh -c "
      sleep 20 &&
      python3 src/worker_launcher.py"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NUM_PROCESSORS: '${NUM_PROCESSORS}'
      NETWORK: '${COMPOSE_PROJECT_NAME}_default'
      HOST: '${HOST}'
      WORKER_IMAGE: "mlexchange1/dummy-worker:1.0"
    depends_on:
      - 'job-service'

  front-end:
    image: mlexchange1/computing_api_front-end:1.0
    restart: "unless-stopped"
    container_name: "comp-frontend"
    command: "python frontend.py"
    ports:
      - "8050:8050"
    depends_on:
      - 'job-service'

#################### content registry ######################
  content-api:
    image: mlexchange1/content-api:1.0
    restart: "unless-stopped"
    container_name: "content-api"
    ports:
      - "8000:8000"

  content-registry:
    image: mlexchange1/content-registry:1.0
    restart: "unless-stopped"
    container_name: "content-registry"
    ports:
      - "8051:8051"

#################### segmentation demo #####################
  front-end:
    image: mlexchange1/seg-demo_front-end:1.2
    restart: "unless-stopped"
    container_name: "fronty"
    command: "python src/napp.py"
    environment:
      DATA_DIR: "${PWD}/dash-seg/data/" 
    volumes:
      - ./dash-seg/data:/app/work/data
    ports:
      - "8052:8050"

#################### models ################################
  model1:
    image: mlexchange1/random-forest-dc:1.0
  model2:
    image: mlexchange1/k-means-dc:1.0
  model3:
    image: mlexchange1/msdnetwork-notebook

