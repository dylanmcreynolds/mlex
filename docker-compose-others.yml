version: "3"

services:

################## job manager ###################
  mongo:
    image: mongo:4.4
    restart: always
    container_name: "mongodb"
    working_dir: "/database/"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    volumes:
      - "./database/:/data/db"
    networks:
      - computing_api_default

  job-service:
    image: mlexchange1/computing_api_job-service:1.0
    restart: 'unless-stopped'
    container_name: 'job-service'
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
#       MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    depends_on:
      - 'mongo'
    ports:
      - '8080:8080'
    networks:
      - computing_api_default

  worker-launcher:
    image: mlexchange1/computing_api_worker-launcher:1.0
    restart: 'unless-stopped'
    container_name: 'worker-launcher'
#     build:
#       context: 'ml_worker'
#       dockerfile: 'docker/Dockerfile'
#     command: sh -c '
#       make build_docker &&
#       sleep 20 &&
#       python3 src/worker_launcher.py'
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock"
#       - "./ml_worker:/app"
#     environment:
#       NUM_PROCESSORS: '${NUM_PROCESSORS}'
#       NETWORK: '${COMPOSE_PROJECT_NAME}_default'
#       HOST: '${HOST}'
    depends_on:
      - 'job-service'
    networks:
      - computing_api_default

  front-end:
    image: mlexchange1/seg-demo_front-end:1.0
    restart: "unless-stopped"
    container_name: "comp-frontend"
#     build:
#       context: "front_end"
#       dockerfile: "docker/Dockerfile"
#     command: "python frontend.py"
    ports:
      - "8050:8050"
    depends_on:
      - 'job-service'
    networks:
      - computing_api_default


################## content registry ###################
  content-api:
    image: mlexchange1/content-api:1.0
    restart: "unless-stopped"
    container_name: "content-api"
    ports:
      - "8000:8000"
    networks:
      - computing_api_default

  content-registry:
    image: mlexchange1/content-registry:1.0
    restart: "unless-stopped"
    container_name: "content-registry"
    ports:
      - "8051:8051"
    networks:
      - computing_api_default





networks:
  computing_api_default:
    external: true


